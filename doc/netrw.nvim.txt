*netrw.nvim* It's not because we use netrw that we cannot have nice things!

==============================================================================
CONTENTS
*netrw-contents*

  1. Intro (|netrw-intro|)
  2. Configure (|netrw-configure|)

==============================================================================
INTRO
*netrw-intro*

This plugin adds a layer of bling and configuration to your favorite file
explorer:

* Print file icons in the sign column
* Configure custom actions with keybinds

It requires Neovim 0.5.0 and other optional dependencies:

* nvim-web-devicons
* A patched font (see README.md for links to install)

==============================================================================
CONFIGURE
*netrw-configure*

Enable the plugin: >
  require'netrw'.setup{
    -- Put your configuration here, or leave the object empty to take the default
    -- configuration.
    icons = {
      symlink = '', -- Symlink icon (directory and file)
      directory = '', -- Directory icon
      file = '', -- File icon
    },
    use_devicons = true, -- Uses nvim-web-devicons if true, otherwise use the file icon specified above
    mappings = {}, -- Custom key mappings
  }

Custom key mappings: >
  require'netrw'.setup{
    -- your config ...

    -- Define normal mode mapping
    mappings = {
      -- Function mappings
      ['p'] = function(payload)
        -- Payload is an object describing the node under the cursor, the object
        -- has the following keys:
        -- - dir: the current netrw directory (vim.b.netrw_curdir)
        -- - node: the name of the file or directory under the cursor
        -- - link: the referenced file if the node under the cursor is a symlink
        -- - extension: the file extension if the node under the cursor is a file
        -- - type: the type of node under the cursor (0 = dir, 1 = file, 2 = symlink)
        -- - col: the column of the node (for liststyle 3)
        print(vim.inspect(payload))
      end,
      -- String command mappings
      ['<Leader><Tab>'] = ":echo 'string command'<CR>",
      -- more mappings ...
    }
    -- your config ...
  }

vim: ft=help tw=78 et ts=2 sw=2 sts=2 norl
